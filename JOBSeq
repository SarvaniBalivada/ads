import java.util.Arrays;
import java.util.Scanner;

class Job{
    int id,deadline,profit;
    Job(int id,int deadline,int profit){
        this.id=id;
        this.deadline=deadline;
        this.profit=profit;//accessing current value
    }
}

public class JobScheduling {
    public static void Jobsequencing(Job jobs[] , int n){
        Arrays.sort(jobs,(a,b)-> b.profit - a.profit);//sorting
        int maxDeadLine=0;
        for(int i=0;i<n;i++){
            if(jobs[i].deadline>maxDeadLine){
                maxDeadLine=jobs[i].deadline;//fixing deadline
            }
        }
        int[] schedule=new int[maxDeadLine];
        Arrays.fill(schedule,-1);
        for(int i=0;i<n;i++){
            for(int j=Math.min(jobs[i].deadline-1,maxDeadLine-1);j>=0;j--){//getting min value for scheduling
                if(schedule[j]==-1){
                    schedule[j]=jobs[i].id;
                    break;
                }
            }

        }
        System.out.println("Selected Jobs for maximum profit: ");
        for(int i=0;i<n;i++){
            if(schedule[i]!=-1){
                System.out.print("Job" + schedule[i] + " ");//printing scheduled jobs
            }
        }
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.print("Enter no.of jobs: ");
        int n=sc.nextInt();
        Job[] jobs=new Job[n];
        for(int i=0;i<n;i++){
            System.out.println("enter the details for job" + (i+1) + "(DeadLine Profit): ");
            int deadLine=sc.nextInt();
            int profit=sc.nextInt();
            jobs[i]=new Job(i+1,deadLine,profit);//inserting values
        }
        Jobsequencing(jobs,n);
        sc.close();
    }  
}
